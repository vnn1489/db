NOTE    ****: OPTIMAL POSSIBLE
NOTE    ????: PROBLEM

CYBERCHASE  1. write a SQL query to list the titles of all episodes in Cyberchase’s original season, Season 1. (1 column and 26 rows)
            >>>> SELECT "title" FROM "episodes" WHERE "season" = 1;

CYBERCHASE  2. list the season number of, and title of, the first episode of every season. (2 columns and 14 rows)
            >>>> SELECT "season", "title" FROM "episodes" WHERE "episode_in_season" = 1;

CYBERCHASE  3. find the production code for the episode “Hackerized!”. (1 column and 1 row)
            >>>> SELECT "production_code" FROM "episodes" WHERE "title" = 'Hackerized!';

CYBERCHASE  4. write a query to find the titles of episodes that do not yet have a listed topic. (1 column and 26 rows)
            >>>> SELECT "title" FROM "episodes" WHERE "topic" IS NULL;

CYBERCHASE  5. find the title of the holiday episode that aired on December 31st, 2004. (1 column and 1 row)
            >>>> SELECT "title" FROM "episodes" WHERE "air_date" IS '2004-12-31';

CYBERCHASE  6. list the titles of episodes from season 6 (2008) that were released early, in 2007. (1 column and 2 rows)
            >>>> SELECT "title" FROM "episodes" WHERE ("season" = 6 AND "air_date" LIKE '2007%');

CYBERCHASE  7. write a SQL query to list the titles and topics of all episodes teaching "fractions". (2 columns and 6 rows)
            >>>> SELECT "title", "topic" FROM "episodes" WHERE topic LIKE '%Fractions%';

CYBERCHASE  8. write a query that counts the number of episodes released in the last 5 years, from 2018 to 2023, inclusive. (1 column and 1 row | ****)
            >>>> SELECT COUNT (*) FROM (SELECT "air_date" FROM "episodes" WHERE "air_date" BETWEEN '2018-01-01' AND '2023-31-12'); ---> CAN USES DATA NOT EXIST INSIDE DATABASE TO DO CONDITION. IN THIS CASE, 2018-01-01 & 2023-31-12 NOT EXIST INSIDE DATABASE

CYBERCHASE  9. write a query that counts the number of episodes released in Cyberchase’s first 5 years, from 2002 to 2007, inclusive. (1 column and 1 row | ****)
            >>>> SELECT COUNT (*) FROM(SELECT "air_date" FROM "episodes" WHERE "air_date" BETWEEN '2002-01-21' AND '2007-12-12');

CYBERCHASE  10. write a SQL query to list the ids, titles, and production codes of all episodes. Order the results by production code, from earliest to latest. (3 columns and 140 rows)
            >>>> SELECT "id", "title", "production_code" FROM "episodes" ORDER BY "production_code";

CYBERCHASE  11. list the titles of episodes from season 5, in reverse alphabetical order. (1 column and 10 rows)
            >>>> SELECT "title" FROM "episodes" WHERE "season" = 5 ORDER BY "title" DESC;

CYBERCHASE  12. count the number of unique episode titles. (1 column and 1 row & sum is 136 | **** | ????)
            >>>> SELECT COUNT(*) FROM (SELECT "episode_in_season" FROM "episodes" WHERE "episode_in_season" = 1);

CYBERCHASE  13. lay tat ca data thuoc season: 4 & co episode in season: 4. (DEPEN BY ME)
            >>>> SELECT * FROM "episodes" WHERE ("season" = 4 AND "episode_in_season" = 4);




VIEWS   1. write a SQL query that a translator might take interest in: list, side by side, the Japanese title and the English title for each print. Ensure the Japanese title is the first column, followed by the English title. (2 columns and 72 rows)
        >>>> 

VIEWS   2. write a SQL query to list the average colors of prints by Hokusai that include “river” in the English title. (As an aside, do they have any hint of blue?) (1 column and 3 rows)
        >>>> 

VIEWS   3. write a SQL query to count how many prints by Hokusai include “Fuji” in the English title. Though all of Hokusai’s prints focused on Mt. Fuji, in how many did “Fuji” make it into the title? (1 column and 1 row)
        >>>> 

VIEWS   4. write a SQL query to count how many prints by Hiroshige have English titles that refer to the “Eastern Capital”. Hiroshige’s prints were created in Japan’s “Edo period,” referencing the eastern capital city of Edo, now Tokyo. (1 column and 1 row)
        >>>> 

VIEWS   5. write a SQL query to find the highest contrast value of prints by Hokusai. Name the column “Maximum Contrast”. Does Hokusai’s prints most contrasting print actually have much contrast? (1 column and 1 row)
        >>>> 

VIEWS   6. write a SQL query to find the average entropy of prints by Hiroshige, rounded to two decimal places. Call the resulting column “Hiroshige Average Entropy”. (1 column and 1 row)
        >>>> 

VIEWS   7. write a SQL query to list the English titles of the 5 brightest prints by Hiroshige, from most to least bright. Compare them to this list on Wikipedia to see if your results match the print’s aesthetics. (1 column and 5 rows)
        >>>> 

VIEWS   8. write a SQL query to list the English titles of the 5 prints with the least contrast by Hokusai, from least to highest contrast. Compare them to this list on Wikipedia to see if your results match the print’s aesthetics. (1 column and 5 rows)
        >>>> 

VIEWS   9. write a SQL query to find the English title and artist of the print with the highest brightness. (2 columns and 1 row)
        >>>> 

VIEWS   10. write a SQL query to answer a question of your choice about the prints. The query should: (DEPEN BY ME)
                - Make use of AS to rename a column
                - Involve at least one condition, using WHERE
                - Sort by at least one column, using ORDER BY
        >>>> 