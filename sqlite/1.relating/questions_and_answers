DESE    https://cs50.harvard.edu/sql/2023/psets/1/dese/
        check50 cs50/problems/2023/sql/dese
        submit50 cs50/problems/2023/sql/dese

DESE    1. Your colleague is preparing a map of all public schools in Massachusetts. In 1.sql, write a SQL query to find the names and cities of all public schools in Massachusetts.
            - Keep in mind that not all schools in the schools table are considered traditional public schools. Massachusetts also recognizes charter schools, which (according to DESE!) are considered distinct. (2 columns and 1,761 rows)
        >>>> SELECT name, city FROM schools WHERE type IS 'Public School';

DESE    2. Your team is working on archiving old data. In 2.sql, write a SQL query to find the names of districts that are no longer operational.
            - Districts that are no longer operational have “(non-op)” at the end of their name. (1 column and 121 rows)
        >>>> SELECT name FROM districts WHERE name LIKE '%non-op%';

DESE    3. The Massachusetts Legislature would like to learn how much money, on average, districts spent per-pupil last year. In 3.sql, write a SQL query to find the average per-pupil expenditure. Name the column “Average District Per-Pupil Expenditure”.
            - Note the per_pupil_expenditure column in the expenditures table contains the average amount, per pupil, each district spent last year. You’ve been asked to find the average of this set of averages, weighting all districts equally regardless of their size. (1 column and 1 row)
        >>>> SELECT AVG(per_pupil_expenditure) AS 'Average District Per-Pupil Expenditure' FROM expenditures;

DESE    4. Some cities have more public schools than others. In 4.sql, write a SQL query to find the 10 cities with the most public schools. Your query should return the names of the cities and the number of public schools within them, ordered from greatest number of public schools to least. If two cities have the same number of public schools, order them alphabetically. (2 columns and 10 rows)
        >>>> SELECT city, COUNT(*) AS public_school_count
             FROM schools
             WHERE type = 'Public School'
             GROUP BY city
             ORDER BY public_school_count DESC, city ASC
             LIMIT 10;

DESE    5. DESE would like you to determine in what cities additional public schools might be needed. In 5.sql, write a SQL query to find cities with 3 or fewer public schools. Your query should return the names of the cities and the number of public schools within them, ordered from greatest number of public schools to least. If two cities have the same number of public schools, order them alphabetically. (2 columns and 201 rows)
        >>>> SELECT city, COUNT(*) AS public_school_count
             FROM schools
             WHERE type = 'Public School'
             GROUP BY city
             HAVING public_school_count <= 3
             ORDER BY public_school_count DESC, city ASC;

DESE    6. DESE wants to assess which schools achieved a 100% graduation rate. In 6.sql, write a SQL query to find the names of schools (public or charter!) that reported a 100% graduation rate. (1 column and 9 rows)
        >>>> SELECT name FROM schools WHERE id IN (
    	     	SELECT school_id FROM graduation_rates WHERE graduated = 100
             );

DESE    7. DESE is preparing a report on schools in the city of Cambridge. In 7.sql, write a SQL query to find the names of schools (public or charter!) in the Cambridge school district. (1 column and 17 rows)
        >>>> SELECT name
             FROM schools
             WHERE city LIKE '%Cambridge%' AND (type LIKE '%public%');

DESE    8. A parent wants to send their child to a district with many other students. In 8.sql, write a SQL query to display the names of all school districts and the number of pupils enrolled in each. (2 columns and 396 rows)
        >>>> SELECT districts.name, expenditures.pupils
             FROM expenditures
             INNER JOIN districts ON expenditures.district_id = districts.id
             ORDER BY expenditures.pupils DESC;

DESE    9. Another parent wants to send their child to a district with few other students. In 9.sql, write a SQL query to find the name (or names) of the school district(s) with the single least number of pupils. Report only the name(s). (1 column and 1 row)
        >>>> SELECT districts.name
             FROM expenditures
             INNER JOIN districts ON expenditures.district_id = districts.id
             ORDER BY expenditures.pupils ASC LIMIT 1;

DESE    10. In Massachusetts, school district expenditures are in part determined by local taxes on property (e.g., home) values. In 10.sql, write a SQL query to find the 10 public school districts with the highest per-pupil expenditures. Your query should return the names of the districts and the per-pupil expenditure for each. (2 columns and 10 rows)
        >>>> SELECT districts.name, expenditures.per_pupil_expenditure
             FROM districts
             JOIN expenditures ON districts.id = expenditures.district_id
             WHERE districts.type IS 'Public School District'
             ORDER BY expenditures.per_pupil_expenditure DESC LIMIT 10;

DESE    11. Is there a relationship between school expenditures and graduation rates? In 11.sql, write a SQL query to display the names of schools, their per-pupil expenditure, and their graduation rate. Sort the schools from greatest per-pupil expenditure to least. If two schools have the same per-pupil expenditure, sort by school name.
            - You should assume a school spends the same amount per-pupil their district as a whole spends. (3 columns and 391 rows)
        >>>> SELECT schools.name, expenditures.per_pupil_expenditure, graduation_rates.graduated
             FROM schools
             JOIN expenditures ON schools.district_id = expenditures.district_id
             JOIN graduation_rates ON schools.id = graduation_rates.school_id
             ORDER BY expenditures.per_pupil_expenditure DESC, schools.name ASC;

DESE    12. A parent asks you for advice on finding the best public school districts in Massachusetts. In 12.sql, write a SQL query to find public school districts with above-average per-pupil expenditures and an above-average percentage of teachers rated “exemplary”. Your query should return the districts’ names, along with their per-pupil expenditures and percentage of teachers rated exemplary. Sort the results first by the percentage of teachers rated exemplary (high to low), then by the per-pupil expenditure (high to low). (3 columns and 65 rows | ????)
        >>>>




MONEYBALL   https://cs50.harvard.edu/sql/2023/psets/1/moneyball/
            check50 cs50/problems/2023/sql/moneyball
            submit50 cs50/problems/2023/sql/moneyball

MONEYBALL   1. You should start by getting a sense for how average player salaries have changed over time. In 1.sql, write a SQL query to find the average player salary by year. (2 columns and 17 rows)
            - Sort by year in descending order.
            - Round the salary to two decimal places and call the column “average salary”.
            - Your query should return a table with two columns, one for year and one for average salary.
            >>>> SELECT year, ROUND(AVG(salary), 2) as average_salary
                 FROM salaries
                 GROUP BY year
                 ORDER BY year DESC;

MONEYBALL   2. Your general manager (i.e., the person who makes decisions about player contracts) asks you whether the team should trade a current player for Cal Ripken Jr., a star player who’s likely nearing his retirement. In 2.sql, write a SQL query to find Cal Ripken Jr.’s salary history. (2 columns and 17 rows)
            - Sort by year in descending order.
            - Your query should return a table with two columns, one for year and one for salary.
            >>>> SELECT year, salary FROM salaries
                 WHERE player_id = (SELECT id FROM players WHERE first_name IS 'Cal' AND last_name IS 'Ripken')
                 ORDER BY year DESC;

MONEYBALL   3. Your team is going to need a great home run hitter. Ken Griffey Jr., a long-time Silver Slugger and Gold Glove award winner, might be a good prospect. In 3.sql, write a SQL query to find Ken Griffey Jr.’s home run history. (2 columns and 13 rows)
            - Sort by year in descending order.
            - Note that there may be two players with the name “Ken Griffey.” This Ken Griffey was born in 1969.
            - Your query should return a table with two columns, one for year and one for home runs.
            >>>> SELECT year, HR
                 FROM performances
                 WHERE player_id IS (
                 	SELECT id
                 	FROM players
                 	WHERE first_name IS 'Ken'
                 	AND last_name IS 'Griffey'
                 	AND birth_year IS 1969
                 )
                 ORDER BY year DESC;

MONEYBALL   4. You need to make a recommendation about which players the team should consider hiring. With the team’s dwindling budget, the general manager wants to know which players were paid the lowest salaries in 2001. In 4.sql, write a SQL query to find the 50 players paid the least in 2001. (3 columns and 50 rows)
            - Sort players by salary, lowest to highest.
            - If two players have the same salary, sort alphabetically by first name and then by last name.
            - If two players have the same first and last name, sort by player ID.
            - Your query should return three columns, one for players’ first names, one for their last names, and one for their salaries.
            >>>> SELECT players.first_name, players.last_name, salaries.salary
                 FROM players
                 JOIN salaries ON salaries.player_id = players.id
                 WHERE salaries.year IS 2001
                 ORDER BY salaries.salary ASC, players.first_name ASC, players.last_name ASC, players.id LIMIT 50;

MONEYBALL   5. It’s a bit of a slow day in the office. Though Satchel no longer plays, in 5.sql, write a SQL query to find all teams that Satchel Paige played for. (1 column and 3 rows)
            - Your query should return a table with a single column, one for the name of the teams.
            >>>> SELECT name FROM teams WHERE id IN (
        	        SELECT DISTINCT team_id FROM performances WHERE player_id = (
        		        SELECT id FROM players WHERE first_name IS 'Satchel' AND last_name IS 'Paige')
        	     );

MONEYBALL   6. Which teams might be the biggest competition for the A’s this year? In 6.sql, write a SQL query to return the top 5 teams, sorted by the total number of hits by players in 2001. (2 columns and 5 rows | ????)
            - Call the column representing total hits by players in 2001 “total hits”.
            - Sort by total hits, highest to lowest.
            - Your query should return two columns, one for the teams’ names and one for their total hits in 2001.
            >>>> SELECT teams.name, SUM(performances.H) AS "total_hits"
                 FROM teams
                 JOIN performances ON teams.id = performances.team_id
                 WHERE performances.year = 2001
                 GROUP BY teams.name
                 ORDER BY "total_hits" DESC
                 LIMIT 5;

MONEYBALL   7. You need to make a recommendation about which player (or players) to avoid recruiting. In 7.sql, write a SQL query to find the name of the player who’s been paid the highest salary, of all time, in Major League Baseball. (2 columns and 1 row)
            - Your query should return a table with two columns, one for the player’s first name and one for their last name.
            >>>> SELECT first_name, last_name
                 FROM players
                 WHERE id = (
                 	SELECT player_id FROM salaries WHERE salary IS (SELECT MAX(salary) FROM salaries)
                 );

MONEYBALL   8. How much would the A’s need to pay to get the best home run hitter this past season? In 8.sql, write a SQL query to find the 2001 salary of the player who hit the most home runs in 2001. (1 column and 1 row)
            - Your query should return a table with one column, the salary of the player.
            >>>> SELECT salary FROM salaries WHERE player_id = (
                	SELECT player_id
                	FROM performances
                	WHERE year IS 2001
                	AND HR IS (SELECT MAX(HR) FROM performances)
                 )
                 AND year IS 2001;

MONEYBALL   9. What salaries are other teams paying? In 9.sql, write a SQL query to find the 5 lowest paying teams (by average salary) in 2001. (2 columns and 5 rows)
            - Round the average salary column to two decimal places and call it “average salary”.
            - Sort the teams by average salary, least to greatest.
            - Your query should return a table with two columns, one for the teams’ names and one for their average salary.
            >>>> SELECT teams.name, ROUND(AVG(salaries.salary), 2) AS average_salary
                 FROM teams
                 JOIN salaries ON salaries.team_id = teams.id
                 WHERE salaries.year IS 2001
                 GROUP BY salaries.team_id
                 ORDER BY average_salary ASC
                 LIMIT 5;

MONEYBALL   10. The general manager has asked you for a report which details each player’s name, their salary for each year they’ve been playing, and their number of home runs for each year they’ve been playing. To be precise, the table should include: (5 columns and 14,915 rows | ????)
            - All player’s first names
            - All player’s last names
            - All player’s salaries
            - All player’s home runs
            - The year in which the player was paid that salary and hit those home runs

        In 10.sql, write a query to return just such a table.
            - Order the results, first and foremost, by player’s IDs (least to greatest).
            - Order rows about the same player by year, in descending order.
            - Consider a corner case: suppose a player has multiple salaries or performances for a given year. Order them first by number of home runs, in descending order, followed by salary, in descending order.
            - Be careful to ensure that, for a single row, the salary’s year and the performance’s year match.
            - Your query should return a table with five columns, per the above.

        view example table: sqlite/problem_set_1/moneyball/20231019.png
            >>>> SELECT 
                     players.first_name, 
                     players.last_name, 
                     salaries.salary, 
                     performances.HR,
                     CASE
                         WHEN salaries.year = performances.year AND salaries.year IS NOT NULL THEN salaries.year
                     END AS year
                 FROM players
                 JOIN salaries ON players.id = salaries.player_id
                 JOIN performances ON players.id = performances.player_id
                 WHERE 
                     performances.year IS NOT NULL 
                     AND salaries.year IS NOT NULL 
                     AND salaries.year = performances.year
                 ORDER BY 
                     players.id ASC,
                     year DESC,
                     performances.HR DESC, 
                     salaries.salary DESC;

MONEYBALL   11. You need a player that can get hits. Who might be the most underrated? In 11.sql, write a SQL query to find the 10 least expensive players per hit in 2001. (3 columns and 10 rows | ????)
            - You can calculate a player’s salary per hit by dividing their 2001 salary by the number of hits they made in 2001. Call the column “dollars per hit”.
            - As in 10.sql, ensure that the salary’s year and the performance’s year match.
            - Dividing a salary by 0 hits will result in a NULL value. Avoid the issue by filtering out players with 0 hits.
            - Sort the table by the “dollars per hit” column, least to most expensive. If two players have the same “dollars per hit”, order by first name, followed by last name, in alphabetical order.
            - Your query should return a table with three columns, one for the players’ first names, one of their last names, and one called “dollars per hit”.
            - You may assume, for simplicity, that a player will only have one salary and one performance in 2001.
            >>>> SELECT 
                     players.first_name, 
                     players.last_name, 
                     (salaries.salary / performances.H) AS "dollars per hit"
                 FROM players
                 JOIN salaries ON players.id = salaries.player_id
                 JOIN performances ON players.id = performances.player_id
                 WHERE 
                     performances.year = 2001
                     AND performances.H > 0
                     AND salaries.year = 2001
                 ORDER BY 
                     "dollars per hit" ASC, 
                     players.first_name ASC, 
                     players.last_name ASC
                 LIMIT 10;

MONEYBALL   12. Hits are great, but so are RBIs! In 12.sql, write a SQL query to find the players among the 10 least expensive players per hit and among the 10 least expensive players per RBI in 2001. (2 columns and 6 rows | ???? | expected: Hunter, Torii)
            - You can calculate a player’s salary per RBI by dividing their 2001 salary by their number of RBIs in 2001.
            - Keep in mind the lessons you’ve learned in 10.sql and 11.sql!
            - Your query should return two columns, one for the players’ first names and one of their last names.
            - Order your results by player ID, least to greatest.
            - You may assume, for simplicity, that a player will only have one salary and one performance in 2001.
            >>>> SELECT 
                     p1.first_name, 
                     p1.last_name
                 FROM
                     (SELECT 
                         players.first_name, 
                         players.last_name, 
                         (salaries.salary / performances.H) AS dollars_per_hit
                     FROM 
                         players
                     JOIN 
                         salaries ON players.id = salaries.player_id
                     JOIN 
                         performances ON players.id = performances.player_id
                     WHERE 
                         performances.year = 2001
                         AND performances.H > 0
                         AND salaries.year = 2001
                     ORDER BY 
                         dollars_per_hit ASC, 
                         players.id ASC
                     LIMIT 10) p1
                 JOIN 
                     (SELECT 
                         players.first_name, 
                         players.last_name, 
                         (salaries.salary / performances.RBI) AS dollars_per_RBI
                     FROM 
                         players
                     JOIN 
                         salaries ON players.id = salaries.player_id
                     JOIN 
                         performances ON players.id = performances.player_id
                     WHERE 
                         performances.year = 2001
                         AND performances.RBI > 0
                         AND salaries.year = 2001
                     ORDER BY 
                         dollars_per_RBI ASC, 
                         players.id ASC
                     LIMIT 10) p2
                 ON p1.first_name = p2.first_name AND p1.last_name = p2.last_name;